@code {
    private ValidationMessageStore _messageStore;
    [CascadingParameter] EditContext CurrentEditContext { get; set; }

    protected override void OnInitialized()
    {
        if (CurrentEditContext == null)
        {
            throw new InvalidOperationException($"{nameof(ValidationErrorMessage)} requires a cascading parameter of type {nameof(EditContext)}.");
        }

        _messageStore = new ValidationMessageStore(CurrentEditContext);
        CurrentEditContext.OnValidationRequested += (s, e) => _messageStore.Clear();
        CurrentEditContext.OnFieldChanged += (s, e) => _messageStore.Clear(e.FieldIdentifier);
    }

    public void DisplayError(string field, string message)
    {
        _messageStore.Add(CurrentEditContext.Field(field), message);
        CurrentEditContext.NotifyValidationStateChanged();
    }
}