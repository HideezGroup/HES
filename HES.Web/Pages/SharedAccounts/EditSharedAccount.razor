@inherits HESModalBase

@if (!Initialized)
{
    <Loader />
}
else
{
    if (EntityBeingEdited)
    {
        <EditedByAnother EntityName="@SharedAccount.Name" CloseAction="ModalDialogCancel" />
    }
    else
    {
        <EditForm Model="SharedAccountEditModel" OnValidSubmit="EditAccountAsync">
            <DataAnnotationsValidator />
            <ValidationErrorMessage @ref="ValidationErrorMessage" />
            <div class="form-group">
                <Label For="@(() => SharedAccountEditModel.Name)" class="text-gray" />
                <InputText @bind-Value="SharedAccountEditModel.Name" class="form-control text-navyblue" />
                <ValidationMessage For="@(() => SharedAccountEditModel.Name)" class="text-danger" />
            </div>
            <div class="form-group">
                <Label For="@(() => SharedAccountEditModel.Urls)" class="text-gray" />
                <textarea @bind="SharedAccountEditModel.Urls" rows="3" class="form-control text-navyblue" />
                <ValidationMessage For="@(() => SharedAccountEditModel.Urls)" class="text-danger" />
            </div>
            <div class="form-group">
                <Label For="@(() => SharedAccountEditModel.Apps)" class="text-gray" />
                <textarea @bind="SharedAccountEditModel.Apps" rows="3" class="form-control text-navyblue" />
                <ValidationMessage For="@(() => SharedAccountEditModel.Apps)" class="text-danger" />
            </div>
            <div class="form-group">
                <Label For="@(() => SharedAccountEditModel.LoginType)" class="text-gray" />
                <select class="form-select" @bind="SharedAccountEditModel.LoginType">
                    <option selected value="@LoginType.WebApp">@EnumHelper.GetDisplayName(LoginType.WebApp)</option>
                    <option value="@LoginType.Local">@EnumHelper.GetDisplayName(LoginType.Local)</option>
                    <option value="@LoginType.Domain">@EnumHelper.GetDisplayName(LoginType.Domain)</option>
                    <option value="@LoginType.AzureAD">@EnumHelper.GetDisplayName(LoginType.AzureAD)</option>
                    <option value="@LoginType.Microsoft">@EnumHelper.GetDisplayName(LoginType.Microsoft)</option>
                </select>
            </div>
            @switch (SharedAccountEditModel.LoginType)
            {
                case LoginType.WebApp:
                    <div class="form-group">
                        <Label For="@(() => SharedAccountEditModel.Login)" class="text-gray" />
                        <InputText @bind-Value="SharedAccountEditModel.Login" class="form-control text-navyblue" tabindex="4" />
                        <ValidationMessage For="@(() => SharedAccountEditModel.Login)" class="text-danger" />
                    </div>
                    break;
                case LoginType.Local:
                    <div class="form-group">
                        <Label For="@(() => SharedAccountEditModel.Login)" class="text-gray" />
                        <InputText @bind-Value="SharedAccountEditModel.Login" placeholder="@Resource.Label_UserName" class="form-control text-navyblue" tabindex="4" />
                        <ValidationMessage For="@(() => SharedAccountEditModel.Login)" class="text-danger" />
                    </div>
                    break;
                case LoginType.Domain:
                    <div class="form-group">
                        <Label For="@(() => SharedAccountEditModel.Login)" class="text-gray" />
                        <div class="input-group">
                            <input type="text" @bind="SharedAccountEditModel.Domain" placeholder="@Resource.Label_Domain" class="form-control" tabindex="4">
                            <input type="text" @bind="SharedAccountEditModel.Login" placeholder="@Resource.Label_UserLogonName" class="form-control" tabindex="5">
                        </div>
                        <ValidationMessage For="@(() => SharedAccountEditModel.Domain)" class="text-danger" />
                        <ValidationMessage For="@(() => SharedAccountEditModel.Login)" class="text-danger" />
                    </div>
                    break;
                case LoginType.AzureAD:
                    <div class="form-group">
                        <Label For="@(() => SharedAccountEditModel.Login)" class="text-gray" />
                        <InputText @bind-Value="SharedAccountEditModel.Login" placeholder="@Resource.Label_UserName" class="form-control text-navyblue" tabindex="4" />
                        <ValidationMessage For="@(() => SharedAccountEditModel.Login)" class="text-danger" />
                    </div>
                    break;
                case LoginType.Microsoft:
                    <div class="form-group">
                        <Label For="@(() => SharedAccountEditModel.Login)" class="text-gray" />
                        <InputText @bind-Value="SharedAccountEditModel.Login" placeholder="@Resource.Label_Email" class="form-control text-navyblue" tabindex="4" />
                        <ValidationMessage For="@(() => SharedAccountEditModel.Login)" class="text-danger" />
                    </div>
                    break;
            }
            <div class="form-footer">
                <button type="button" class="btn btn-secondary" @onclick="ModalDialogCancel">@Resource.Btn_Cancel</button>
                <Button @ref="Button" Text="@Resource.Btn_Save" type="submit" class="btn btn-primary" />
            </div>
        </EditForm>
    }
}