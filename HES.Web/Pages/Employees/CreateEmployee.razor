@inherits HESModalBase

@if (!Initialized)
{
    <Loader />
}
else
{
    <div class="wizard-header mb-3">
        <div class="wizard wizard-horizontal wizard-label-vertical wizard-circle">
            <div class="wizard-item @(WizardStep == WizardStep.Profile ? "wizard-item-process" : null) @(WizardStep != WizardStep.Profile && WizardStep > WizardStep.Profile ? "wizard-item-finish" : null)">
                <div class="wizard-item-tail"></div>
                <div class="wizard-item-icon">
                    <span class="wizard-icon">
                        <span class="wizard-icon-circle">
                        </span>
                    </span>
                </div>
                <div class="wizard-item-content">
                    <div class="wizard-item-title">@Resource.Label_Profile</div>
                </div>
            </div>
            <div class="wizard-item wizard-item-wait @(WizardStep == WizardStep.HardwareVault ? "wizard-item-process" : null) @(WizardStep != WizardStep.HardwareVault && WizardStep > WizardStep.HardwareVault ? "wizard-item-finish" : null)">
                <div class="wizard-item-tail"></div>
                <div class="wizard-item-icon">
                    <span class="wizard-icon">
                        <span class="wizard-icon-circle">
                        </span>
                    </span>
                </div>
                <div class="wizard-item-content">
                    <div class="wizard-item-title">@Resource.Label_HardwareVault</div>
                </div>
            </div>
            <div class="wizard-item wizard-item-wait @(WizardStep == WizardStep.WorkstationAccount ? "wizard-item-process" : null) @(WizardStep != WizardStep.WorkstationAccount && WizardStep > WizardStep.WorkstationAccount ? "wizard-item-finish" : null)">
                <div class="wizard-item-tail"></div>
                <div class="wizard-item-icon">
                    <span class="wizard-icon">
                        <span class="wizard-icon-circle">
                        </span>
                    </span>
                </div>
                <div class="wizard-item-content">
                    <div class="wizard-item-title">@Resource.Label_Account</div>
                </div>
            </div>
            <div class="wizard-item wizard-item-wait @(WizardStep == WizardStep.Overview ? "wizard-item-process" : null) @(WizardStep != WizardStep.Overview && WizardStep > WizardStep.Overview ? "wizard-item-finish" : null)">
                <div class="wizard-item-tail"></div>
                <div class="wizard-item-icon">
                    <span class="wizard-icon">
                        <span class="wizard-icon-circle">
                        </span>
                    </span>
                </div>
                <div class="wizard-item-content">
                    <div class="wizard-item-title">@Resource.Label_Overview</div>
                </div>
            </div>
            <div class="wizard-item wizard-item-wait @(WizardStep == WizardStep.Activation ? "wizard-item-process" : null) @(WizardStep != WizardStep.Activation && WizardStep > WizardStep.Activation ? "wizard-item-finish" : null)">
                <div class="wizard-item-tail"></div>
                <div class="wizard-item-icon">
                    <span class="wizard-icon">
                        <span class="wizard-icon-circle">
                        </span>
                    </span>
                </div>
                <div class="wizard-item-content">
                    <div class="wizard-item-title">@Resource.Label_Activation</div>
                </div>
            </div>
        </div>
    </div>
    <!-- Employee -->
    <div class="wizard-tab @(WizardStep != WizardStep.Profile ? "d-none" : null)">
        <EditForm EditContext="@EmployeeContext">
            <DataAnnotationsValidator />
            <ValidationErrorMessage @ref="EmployeeValidationErrorMessage" />
            <div class="row">
                <div class="form-group col">
                    <Label For="@(() => Employee.FirstName)" class="text-gray" />
                    <InputText @bind-Value="Employee.FirstName" class="form-control text-navyblue" />
                    <ValidationMessage For="@(() => Employee.FirstName)" class="text-danger" />
                </div>
                <div class="form-group col">
                    <Label For="@(() => Employee.LastName)" class="text-gray" />
                    <InputText @bind-Value="Employee.LastName" class="form-control text-navyblue" />
                    <ValidationMessage For="@(() => Employee.LastName)" class="text-danger" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col">
                    <Label For="@(() => Employee.Email)" class="text-gray" />
                    <InputText @bind-Value="Employee.Email" class="form-control text-navyblue" />
                    <ValidationMessage For="@(() => Employee.Email)" class="text-danger" />
                </div>
                <div class="form-group col">
                    <Label For="@(() => Employee.PhoneNumber)" class="text-gray" />
                    <InputText @bind-Value="Employee.PhoneNumber" class="form-control text-navyblue" />
                    <ValidationMessage For="@(() => Employee.PhoneNumber)" class="text-danger" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col">
                    <label class="text-gray">@Resource.Label_Company</label>
                    <select class="form-select" @onchange="CompanyChangedAsync">
                        <option selected></option>
                        @foreach (var item in Companies)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
                <div class="form-group col">
                    <Label For="@(() => Employee.DepartmentId)" class="text-gray" />
                    <select @bind="Employee.DepartmentId" class="form-select">
                        @foreach (var item in Departments)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="form-group col">
                    <Label For="@(() => Employee.PositionId)" class="text-gray" />
                    <select @bind="Employee.PositionId" class="form-select">
                        <option selected></option>
                        @foreach (var item in Positions)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
                <div class="col"></div>
            </div>
        </EditForm>
    </div>
    <!-- Hardware Vault -->
    <div class="wizard-tab @(WizardStep != WizardStep.HardwareVault ? "d-none" : null)">
        <div class="row justify-content-center">
            <div class="col col-sm-6">
                <Alert Message="@WarningMessage" />
                <SearchBox SearchTextChanged="SearchTextChangedAsync" />
                <div class="list-group my-3 py-1 overflow-auto" style="max-height: 300px">
                    @foreach (var hardwareVault in HardwareVaults)
                    {
                        <button class="list-group-item list-group-item-action @(hardwareVault.Id == SelectedHardwareVault?.Id ? "active": string.Empty)" @onclick="async () => await SelectedItemChangedAsync(hardwareVault)">
                            @hardwareVault.Id
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- Workstation Account -->
    <div class="wizard-tab  @(WizardStep != WizardStep.WorkstationAccount ? "d-none" : null)">
        @if (SharedAccounts.Count > 0)
        {
            <ul class="nav nav-pills mb-3 justify-content-center" id="pills-tab-accounts" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active ws-account-nav" id="pills-personal-tab" data-bs-toggle="pill" href="#pills-personal" role="tab" @onclick="@(()=> AccountTypeChanged(AccountType.Personal))">@Resource.Label_PersonalAccount</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link ws-account-nav" id="pills-shared-tab" data-bs-toggle="pill" href="#pills-shared" role="tab" @onclick="@(()=> AccountTypeChanged(AccountType.Shared))">@Resource.Label_SharedAccount</a>
                </li>
            </ul>
        }
        <div class="tab-content">
            <div class="tab-pane fade show active" id="pills-personal" role="tabpanel">
                <EditForm EditContext="@PersonalAccountContext">
                    <DataAnnotationsValidator />
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <Label For="@(() => PersonalAccount.Name)" class="text-gray" />
                                <InputText @bind-Value="PersonalAccount.Name" class="form-control text-navyblue" tabindex="1" />
                                <ValidationMessage For="@(() => PersonalAccount.Name)" class="text-danger" />
                            </div>
                            <div class="form-group">
                                <Label For="@(() => PersonalAccount.Urls)" class="text-gray" />
                                <textarea @bind="PersonalAccount.Urls" style="height:81px" class="form-control text-navyblue" tabindex="2" />
                                <ValidationMessage For="@(() => PersonalAccount.Urls)" class="text-danger" />
                            </div>
                            <div class="form-group">
                                <Label For="@(() => PersonalAccount.Apps)" class="text-gray" />
                                <textarea @bind="PersonalAccount.Apps" style="height:81px" class="form-control text-navyblue" tabindex="3" />
                                <ValidationMessage For="@(() => PersonalAccount.Apps)" class="text-danger" />
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-group">
                                <label class="control-label text-gray">@Resource.Label_LoginType</label>
                                <select class="form-select" @bind="PersonalAccount.LoginType">
                                    <option selected value="@LoginType.Local">@EnumHelper.GetDisplayName(LoginType.Local)</option>
                                    <option value="@LoginType.Domain">@EnumHelper.GetDisplayName(LoginType.Domain)</option>
                                    <option value="@LoginType.AzureAD">@EnumHelper.GetDisplayName(LoginType.AzureAD)</option>
                                    <option value="@LoginType.Microsoft">@EnumHelper.GetDisplayName(LoginType.Microsoft)</option>
                                </select>
                            </div>
                            @switch (PersonalAccount.LoginType)
                            {
                                case LoginType.WebApp:
                                    <div class="form-group">
                                        <Label For="@(() => PersonalAccount.Login)" class="text-gray" />
                                        <InputText @bind-Value="PersonalAccount.Login" class="form-control text-navyblue" tabindex="4" />
                                        <ValidationMessage For="@(() => PersonalAccount.Login)" class="text-danger" />
                                    </div>
                                    break;
                                case LoginType.Local:
                                    <div class="form-group">
                                        <Label For="@(() => PersonalAccount.Login)" class="text-gray" />
                                        <InputText @bind-Value="PersonalAccount.Login" placeholder="User Name" class="form-control text-navyblue" tabindex="4" />
                                        <ValidationMessage For="@(() => PersonalAccount.Login)" class="text-danger" />
                                    </div>
                                    break;
                                case LoginType.Domain:
                                    <div class="form-group">
                                        <Label For="@(() => PersonalAccount.Login)" class="text-gray" />
                                        <div class="input-group">
                                            <input type="text" @bind="PersonalAccount.Domain" placeholder="Domain" class="form-control" tabindex="4">
                                            <input type="text" @bind="PersonalAccount.Login" placeholder="User Logon Name" class="form-control" tabindex="5">
                                        </div>
                                        <ValidationMessage For="@(() => PersonalAccount.Domain)" class="text-danger" />
                                        <ValidationMessage For="@(() => PersonalAccount.Login)" class="text-danger" />
                                    </div>
                                    break;
                                case LoginType.AzureAD:
                                    <div class="form-group">
                                        <Label For="@(() => PersonalAccount.Login)" class="text-gray" />
                                        <InputText @bind-Value="PersonalAccount.Login" placeholder="User Name" class="form-control text-navyblue" tabindex="4" />
                                        <ValidationMessage For="@(() => PersonalAccount.Login)" class="text-danger" />
                                    </div>
                                    break;
                                case LoginType.Microsoft:
                                    <div class="form-group">
                                        <Label For="@(() => PersonalAccount.Login)" class="text-gray" />
                                        <InputText @bind-Value="PersonalAccount.Login" placeholder="Email" class="form-control text-navyblue" tabindex="4" />
                                        <ValidationMessage For="@(() => PersonalAccount.Login)" class="text-danger" />
                                    </div>
                                    break;
                            }
                            <div class="form-group">
                                <Label For="@(() => PersonalAccount.Password)" class="text-gray" />
                                <InputText @bind-Value="PersonalAccount.Password" type="password" class="form-control text-navyblue" tabindex="6" />
                                <ValidationMessage For="@(() => PersonalAccount.Password)" class="text-danger" />
                            </div>
                            <div class="form-group">
                                <Label For="@(() => PersonalAccount.ConfirmPassword)" class="text-gray" />
                                <InputText @bind-Value="PersonalAccount.ConfirmPassword" type="password" class="form-control text-navyblue" tabindex="7" />
                                <ValidationMessage For="@(() => PersonalAccount.ConfirmPassword)" class="text-danger" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <Label For="@(() => PersonalAccount.OtpSecret)" class="text-gray" />
                                <InputText @bind-Value="PersonalAccount.OtpSecret" class="form-control text-navyblue" tabindex="8" />
                                <ValidationMessage For="@(() => PersonalAccount.OtpSecret)" class="text-danger" />
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
            @if (SharedAccounts.Count > 0)
            {
                <div class="tab-pane fade" id="pills-shared" role="tabpanel">
                    <div class="row">
                        <div class="col col-sm-6 offset-md-3">
                            <label class="control-label text-gray">@Resource.Label_SharedAccounts</label>
                            <select @bind="SharedAccountId" class="form-select">
                                @foreach (var item in SharedAccounts)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <!-- Overview -->
    <div class="wizard-tab @(WizardStep != WizardStep.Overview ? "d-none" : null)">
        <div class="row">
            <!-- Employee -->
            <div class="col">
                <h4 class="mx-2 text-navyblue">@Resource.Label_Employee</h4>
                <div class="border rounded py-2 px-3">
                    <div class="fw-bold">@Resource.Label_FullName</div>
                    <div class="text-break overflow-hidden text-truncate" style="max-width:200px;">@Employee.FullName</div>
                    <div class="fw-bold">@Resource.Label_Company</div>
                    <div>@(string.IsNullOrEmpty(Employee.DepartmentId) ? "" : Departments.FirstOrDefault(x=>x.Id == Employee.DepartmentId).Company.Name)</div>
                    <div class="fw-bold">@Resource.Label_Department</div>
                    <div>@(string.IsNullOrEmpty(Employee.DepartmentId) ? "" : Departments.FirstOrDefault(x=>x.Id == Employee.DepartmentId).Name)</div>
                    <div class="fw-bold">@Resource.Label_Position</div>
                    <div>@(string.IsNullOrEmpty(Employee.PositionId) ? "" : Positions.FirstOrDefault(x=>x.Id == Employee.PositionId).Name)</div>
                </div>
            </div>
            <!-- Hardware Vault -->
            <div class="col">
                <h4 class="mx-2 text-navyblue">@Resource.Label_HardwareVault</h4>
                <div class="border rounded py-2 px-3">
                    <div class="fw-bold">@Resource.Label_SerialNumber</div>
                    <div>@SelectedHardwareVault?.Id</div>
                </div>
            </div>
            <!-- Workstation Account -->
            <div class="col">
                <h4 class="mx-2 text-navyblue">@Resource.Label_Account</h4>
                @if (AccountType == AccountType.Personal)
                {
                    <div class="border rounded py-2 px-3">
                        <div class="fw-bold">@Resource.Label_AccountName</div>
                        <div>@(AccountSkiped ? "" : PersonalAccount.Name)</div>
                        <div class="fw-bold">@Resource.Label_UserName</div>
                        <div>@(AccountSkiped ? "" : PersonalAccount.Login)</div>
                    </div>
                }
                else
                {
                    <div class="border rounded py-2 px-3">
                        <div class="fw-bold">@Resource.Label_AccountName</div>
                        <div>@(SharedAccountId == null ? "" : SharedAccounts.FirstOrDefault(x=>x.Id == SharedAccountId).Name)</div>
                        <div class="fw-bold">@Resource.Label_UserName</div>
                        <div>@(SharedAccountId == null ? "" : SharedAccounts.FirstOrDefault(x => x.Id == SharedAccountId).Login)</div>
                    </div>
                }
            </div>
        </div>
    </div>
    <!-- Activation -->
    <div class="wizard-tab @(WizardStep != WizardStep.Activation ? "d-none" : null)">
        <div class="row justify-content-center">
            <div class="col col-sm-6">
                <div class="form-group">
                    <label class="control-label fw-bold">@Resource.Label_Employee - @Employee.FullName</label>
                    <br />
                    <label class="control-label fw-bold">@Resource.Label_HardwareVault - @SelectedHardwareVault?.Id</label>
                </div>
                <label class="control-label text-gray">@Resource.Employees_CreateEmployee_SendEmail</label>
                <div class="input-group1 form-group">
                    <EditForm Model="UserEmailModel" OnValidSubmit="SendEmailAsync">
                        <DataAnnotationsValidator />
                        <ValidationErrorMessage @ref="EmailValidationErrorMessage" />
                        <div class="input-group">
                            <InputText @bind-Value="UserEmailModel.Email" class="form-control text-navyblue" placeholder="@Resource.Label_Email" />
                            <Button @ref="ButtonSendEmail" Text="@Resource.Btn_SendEmail" type="submit" class="btn btn-outline-primary" />
                        </div>
                        <ValidationMessage For="@(() => UserEmailModel.Email)" class="text-danger" />
                    </EditForm>
                </div>
                <label class="control-label text-gray">@Resource.Label_ActivationCode</label>
                <div class="input-group form-group">
                    <input type="@(InputType)" id="activationCodeInput" value="@Code" readonly class="form-control">
                    <button class="btn btn-outline-secondary" type="button" @onmousedown="@(() => InputType = "Text")" @onmouseup="@(() => InputType = "Password")">@Resource.Btn_Show</button>
                    <button class="btn btn-outline-secondary" type="button" @onclick="CopyToClipboardAsync">@Resource.Btn_Copy</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Navigation Buttons -->
    <div class="form-footer">
        @if (WizardStep == WizardStep.HardwareVault)
        {
            <button type="button" class="btn btn-outline-secondary me-3" @onclick="SkipVault">@Resource.Btn_Skip</button>
        }
        @if (WizardStep == WizardStep.WorkstationAccount)
        {
            <button type="button" class="btn btn-outline-secondary me-3" @onclick="SkipAccount">@Resource.Btn_Skip</button>
        }
        @if (WizardStep != WizardStep.Profile && WizardStep != WizardStep.Activation)
        {
            <button type="button" class="btn btn-secondary me-1" @onclick="Back">@Resource.Btn_Back</button>
        }
        <Button class="btn btn-primary" OnClick="Next" Text="@(WizardStep == WizardStep.Activation ? Resource.Btn_Done : WizardStep == WizardStep.Overview ? Resource.Btn_Create : Resource.Btn_Next)" />
    </div>
}