@implements IDisposable
@inject IDataProtectionService  DataProtectionService
@inject NavigationManager NavigationManager

@code {
    private readonly string path = "Settings/DataProtection/Activate";

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += HandleLocationChanged;

        var status = DataProtectionService.Status();

        if (status == ProtectionStatus.Activate && NavigationManager.ToBaseRelativePath(NavigationManager.Uri) != path)
        {
            NavigationManager.NavigateTo(path);
            return;
        }
    }

    private void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        var status = DataProtectionService.Status();

        if (status == ProtectionStatus.Activate && NavigationManager.ToBaseRelativePath(NavigationManager.Uri) != path)
            NavigationManager.NavigateTo(path);
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }
}