@using HES.Core.Models.Breadcrumb
@inject IBreadcrumbsService BreadcrumbsService
@implements IDisposable

<nav class="navbar navbar-expand navbar-light bg-white border-bottom box-shadow">
    <button id="BtnToggleSidebar" class="btn btn-link ms-1" onclick="ToggleSidebar()" style="box-shadow: none">
        <img src="/svg/icon-menu.svg" />
    </button>
    @if (Items != null)
    {
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-light rounded">
                @foreach (var item in Items)
                {
                    if (item.Active)
                    {
                        <li class="breadcrumb-item active" aria-current="page">@item.Content</li>
                    }
                    else
                    {
                        <li class="breadcrumb-item"><a href="@item.Link">@item.Content</a></li>
                    }
                }
            </ol>
        </nav>
    }
    <a class="btn btn-link ms-auto" href="@Routes.Alarm" role="button" title="@Resource.Alarm_PageHeader">
        <img src="/svg/icon-alarm.svg" />
    </a>
    <div class="btn-group no-arrow me-2">
        <button type="button" class="btn dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            <img src="/svg/icon-account-settings.svg" />
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
            <AuthorizeView>
                <Authorized>
                    <h6 class="mx-3 mt-2 mb-3 text-nowrap">
                        @context.User.Identity.Name
                    </h6>
                    <div class="dropdown-divider"></div>
                </Authorized>
            </AuthorizeView>
            <li>
                <a class="dropdown-item" href="@Routes.Profile">
                    <img src="/svg/icon-profile.svg" />
                    @Resource.Label_Profile
                </a>
            </li>
            <li>
                <form class="form-inline dropdown-item" method="post" action="@Routes.Logout">
                    <button type="submit" class="nav-link btn btn-link text-dark p-0 w-100 text-start text-decoration-none">
                        <img src="/svg/icon-logout.svg" />
                        @Resource.Label_Logout
                    </button>
                </form>
            </li>
        </ul>
    </div>
</nav>

@code{
    public List<Breadcrumb> Items { get; set; }

    protected override void OnInitialized()
    {
        BreadcrumbsService.OnSet += OnSet;
    }

    private async Task OnSet(List<Breadcrumb> breadcrumbs)
    {
        await InvokeAsync(() =>
        {
            Items = breadcrumbs;
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        BreadcrumbsService.OnSet -= OnSet;
    }
}